@using PagedList.Mvc

@model TPGP.Models.ViewModels.ContractsViewModel

@{
    ViewBag.Title = "Contracts";
}

@section css {
    <link href="@Url.Content("~/Content/PagedList.css")" rel="stylesheet" />
}

<h1>@Model.Portfolio.Sector</h1>
<hr />
@if (!Model.IsListEmpty)
{
    <div class="tools">

        @if (Model.Portfolio.Scope == "Initial")
        {
            <div class="col-lg-4">
                @Html.ActionLink("Create new contract", "Create", "Contract", null, new { @class = "btn btn-primary" })
            </div>
        }

        <div class="col-lg-4" style="padding-bottom:25px;">

            @using (Html.BeginForm("Contracts", "Portfolio", FormMethod.Get))
            {
                <div class="input-group">
                    @Html.TextBox("SearchString", null, new { @class = "form-control", @placeholder = "Search..." })
                    <span class="input-group-btn">
                        <button class="btn btn-secondary" type="submit" value="Search">Search</button>
                    </span>
                </div>
            }

        </div>
    </div>

    <div>
        <table class="table table-striped table-hover">
            <thead class="thead-inverse">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Contracts[0].Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Contracts[0].InitDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Contracts[0].EndDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Contracts[0].Company)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>

                @foreach (var item in Model.Contracts)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.InitDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EndDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Company)
                        </td>
                        <td>
                            @if (Model.Portfolio.Scope == "Initial")
                            {
                                @Html.ActionLink("Edit", "Edit", "Contract", new { id = item.Id }, new { @class = "btn btn-info" })
                            }

                            @Html.ActionLink("Details", "Details", "Contract", new { id = item.Id }, new { @class = "btn btn-info" })
                        </td>
                    </tr>
                }

            </tbody>
        </table>

        <div class="row pagination pager">
            @Html.PagedListPager(Model.Contracts, page => Url.Action("Contracts", new { page }))
        </div>
    </div>
}

else
{
    if (Model.Portfolio.Scope == "Initial")
    {
        <div class="col-lg-4">
            @Html.ActionLink("Create new contract", "Create", "Contract", null, new { @class = "btn btn-primary" })
        </div>
    }

    <div class="container" style="padding:50px;">
        <div class="alert alert-info">
            <strong>Info!</strong> There is no contract in this portfolio yet.
        </div>
    </div>
}